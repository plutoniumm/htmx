// Code generated by templ@v0.2.364 DO NOT EDIT.

package main

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func details() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<div><h3 style=\"text-align:center;\">")
		if err != nil {
			return err
		}
		var_2 := `Welcome to HTMX!`
		_, err = templBuffer.WriteString(var_2)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h3><p>")
		if err != nil {
			return err
		}
		var_3 := `You&apos;re using these tools, check their docs to learn more:`
		_, err = templBuffer.WriteString(var_3)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</p><ul><li><img src=\"https://go.dev/images/go-logo-blue.svg\"><a href=\"https://go.dev/doc/\">")
		if err != nil {
			return err
		}
		var_4 := `Go`
		_, err = templBuffer.WriteString(var_4)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a></li><li><img src=\"https://htmx.org/img/htmx_logo.2.png\"><a href=\"https://htmx.org/docs\">")
		if err != nil {
			return err
		}
		var_5 := `HTMX`
		_, err = templBuffer.WriteString(var_5)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a></li><li><img src=\"https://templ.guide/img/logo.svg\"><a href=\"https://templ.guide/\">")
		if err != nil {
			return err
		}
		var_6 := `Templ`
		_, err = templBuffer.WriteString(var_6)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a></li></ul></div>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
